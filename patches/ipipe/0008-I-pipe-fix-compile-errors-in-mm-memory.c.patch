From e7d92bb76d2607cc6856cb9d89cf696f7d11470e Mon Sep 17 00:00:00 2001
From: Marcel Groothuis <margro.xbmc@gmail.com>
Date: Fri, 7 Jul 2023 17:12:07 +0200
Subject: [PATCH 8/8] I-pipe: fix compile errors in mm/memory.c

---
 mm/memory.c | 44 +++++++++++++++++++++++++++-----------------
 1 file changed, 27 insertions(+), 17 deletions(-)

diff --git a/mm/memory.c b/mm/memory.c
index 878c960de2e7..4ef4cbcd0d19 100644
--- a/mm/memory.c
+++ b/mm/memory.c
@@ -141,11 +141,8 @@ EXPORT_SYMBOL(zero_pfn);
 
 unsigned long highest_memmap_pfn __read_mostly;
 
-static inline void cow_user_page(struct page *dst,
-				 struct page *src,
-				 unsigned long va,
-				 struct vm_area_struct *vma);
-
+static bool cow_user_page(struct page *dst, struct page *src,
+			  struct vm_fault *vmf);
 /*
  * CONFIG_MMU architectures set up ZERO_PAGE in their paging_init()
  */
@@ -978,7 +975,8 @@ struct page *vm_normal_page_pmd(struct vm_area_struct *vma, unsigned long addr,
 static inline unsigned long
 copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,
 	     pte_t *dst_pte, pte_t *src_pte, struct vm_area_struct *vma,
-	     unsigned long addr, int *rss, struct page *uncow_page)
+	     unsigned long addr, int *rss, pmd_t *src_pmd,
+	     struct page *uncow_page)
 {
 	unsigned long vm_flags = vma->vm_flags;
 	pte_t pte = *src_pte;
@@ -1059,16 +1057,28 @@ copy_one_pte(struct mm_struct *dst_mm, struct mm_struct *src_mm,
 #ifdef CONFIG_IPIPE
 		if (uncow_page) {
 			struct page *old_page = vm_normal_page(vma, addr, pte);
-			cow_user_page(uncow_page, old_page, addr, vma);
-			pte = mk_pte(uncow_page, vma->vm_page_prot);
-
-			if (vm_flags & VM_SHARED)
-				pte = pte_mkclean(pte);
-			pte = pte_mkold(pte);
-
-			page_add_new_anon_rmap(uncow_page, vma, addr, false);
-			rss[!!PageAnon(uncow_page)]++;
-			goto out_set_pte;
+			struct vm_fault vmf;
+			
+			vmf.vma = vma;
+			vmf.address = addr;
+			vmf.orig_pte = pte;
+			vmf.pmd = src_pmd;
+
+			if (cow_user_page(uncow_page, old_page, &vmf)) {
+				pte = mk_pte(uncow_page, vma->vm_page_prot);
+
+				if (vm_flags & VM_SHARED)
+					pte = pte_mkclean(pte);
+				pte = pte_mkold(pte);
+
+				page_add_new_anon_rmap(uncow_page, vma, addr,
+						       false);
+				rss[!!PageAnon(uncow_page)]++;
+				goto out_set_pte;
+			} else {
+				/* unexpected: source page no longer present */
+				WARN_ON_ONCE(1);
+			}
 		}
 #endif /* CONFIG_IPIPE */
 		ptep_set_wrprotect(src_mm, addr, src_pte);
@@ -1178,7 +1188,7 @@ static int copy_pte_range(struct mm_struct *dst_mm, struct mm_struct *src_mm,
 		}
 #endif
 		entry.val = copy_one_pte(dst_mm, src_mm, dst_pte, src_pte,
-					 vma, addr, rss, uncow_page);
+					 vma, addr, rss, src_pmd, uncow_page);
 		uncow_page = NULL;
 		if (entry.val)
 			break;
-- 
2.34.1

